{"version":3,"sources":["../../../../../src/i18n/index.ts","../../../../../src/i18n/es.ts","../../../../../src/i18n/en.ts","../../../../../src/i18n/cn.ts","authProvider.js","Dashboard/Dashboard.js","import-csv/ListActions.js","User/UserList.js","team-choices.js","weeks.js","User/UserEdit.js","User/UserCreate.js","Game/GameList.js","Game/GameEdit.js","Game/GameCreate.js","Team/TeamList.js","Team/TeamEdit.js","Team/TeamCreate.js","App.js","serviceWorker.js","index.js"],"names":["login","username","localStorage","setItem","Promise","resolve","logout","removeItem","checkError","status","reject","checkAuth","getItem","getPermissions","callTable","method","resource","endpoint","handleClick","axios","url","then","response","data","message","catch","error","JSON","stringify","NormalButton","styled","Button","background","borderRadius","color","backgroundColor","DangerButton","ScoreOption","ListItem","ListItemText","primary","secondary","ListItemSecondaryAction","variant","onClick","ClearOption","ResetOption","React","open","setOpen","isFail","setFail","snackBarMessage","setSnackBarMessage","failValue","Card","CardHeader","title","CardContent","Box","py","Typography","Divider","List","border","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","event","reason","ContentProps","style","ListActions","props","className","basePath","total","currentSort","filterValues","exporter","TopToolbar","CreateButton","ExportButton","disabled","sort","filter","UserFilter","Filter","TextInput","label","source","alwaysOn","UserList","filters","actions","Datagrid","NumberField","TextField","DateField","EditButton","id","name","UserTitle","record","UserEdit","Edit","SimpleForm","weeks","map","weekId","SelectInput","choices","teamChoices","UserCreate","Create","redirect","GameFilter","GameList","GameEdit","DateInput","NumberInput","GameCreate","TeamFilter","TeamList","TeamEdit","TeamCreate","dataProvider","simpleRestProvider","App","i18nProvider","polyglotI18nProvider","local","englishMessages","domainMessages","Admin","dashboard","Dashboard","authProvider","Resource","icon","UserIcon","list","edit","create","GameIcon","TeamIcon","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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,KAAM,kBAER,CACED,GAAI,MACJC,KAAM,kBAER,CACED,GAAI,MACJC,KAAM,iBAER,CACED,GAAI,KACJC,KAAM,qBAER,CACED,GAAI,MACJC,KAAM,kBAER,CACED,GAAI,MACJC,KAAM,sBAER,CACED,GAAI,MACJC,KAAM,wBAER,CACED,GAAI,KACJC,KAAM,sBAER,CACED,GAAI,MACJC,KAAM,wBAER,CACED,GAAI,MACJC,KAAM,oBAER,CACED,GAAI,KACJC,KAAM,qBAER,CACED,GAAI,MACJC,KAAM,kBAER,CACED,GAAI,MACJC,KAAM,qBAER,CACED,GAAI,KACJC,KAAM,wBAER,CACED,GAAI,KACJC,KAAM,sBAER,CACED,GAAI,MACJC,KAAM,mBAER,CACED,GAAI,MACJC,KAAM,iBAER,CACED,GAAI,MACJC,KAAM,uBAER,CACED,GAAI,MACJC,KAAM,uBAER,CACED,GAAI,MACJC,KAAM,oBAER,CACED,GAAI,KACJC,KAAM,uBAER,CACED,GAAI,KACJC,KAAM,wBAER,CACED,GAAI,MACJC,KAAM,oBAER,CACED,GAAI,MACJC,KAAM,4BAER,CACED,GAAI,OACJC,KAAM,SAER,CACED,GAAI,OACJC,KAAM,UC3IK,IACb,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QCZIC,GAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OAAO,8CAAoBA,EAAM,WAAOA,EAAOzG,SAAd,KAA4B,KAoBhD0G,GAjBE,SAAC/B,GAAD,OACf,kBAACgC,GAAA,EAAD,eAAMnD,MAAO,kBAAC,GAAD,OAAmBmB,GAC9B,kBAACiC,GAAA,EAAD,KACE,kBAAClB,EAAA,EAAD,CAAWE,OAAO,aAClB,kBAACF,EAAA,EAAD,CAAWE,OAAO,OAClB,kBAACF,EAAA,EAAD,CAAWE,OAAO,cAClB,kBAACF,EAAA,EAAD,CAAWE,OAAO,aACjBiB,GAAMC,KAAI,SAACC,GAAD,OACT,6BACE,kBAACC,GAAA,EAAD,CAAapB,OAAM,UAAKmB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","file":"static/js/main.fdee8609.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar es_1 = require(\"./es\");\nObject.defineProperty(exports, \"es\", { enumerable: true, get: function () { return es_1.default; } });\nvar en_1 = require(\"./en\");\nObject.defineProperty(exports, \"en\", { enumerable: true, get: function () { return en_1.default; } });\nvar cn_1 = require(\"./cn\");\nObject.defineProperty(exports, \"cn\", { enumerable: true, get: function () { return cn_1.default; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    csv: {\n        buttonMain: {\n            label: \"Importar\",\n            tooltip: \"Debe ser un archivo '.csv' o '.tsv'\",\n            emptyResource: \"La propiedad 'resource' estaba vacía, ¿pasó el {... props} al Importar Botón?\",\n        },\n        parsing: {\n            collidingIds: 'Se encontraron campos de \"id\" en conflicto',\n            failedValidateRow: 'CSV no cumplió con los requisitos de validación',\n            invalidCsv: 'El documento no se pudo analizar como un archivo \"csv\"',\n        },\n        dialogCommon: {\n            subtitle: 'Importando% {count} elementos de% {fileName} a \"% {resource}\"',\n            conflictCount: \"El recurso <strong>% {resource} </strong> tiene <strong>% {conflictingCount} </strong> más registros con ID en conflicto\",\n            buttons: {\n                cancel: \"Cancelar\",\n            }\n        },\n        dialogImport: {\n            alertClose: \"Importado% {fname}\",\n            title: 'Importando a \"% {resource}\"',\n            buttons: {\n                replaceAllConflicts: \"Reemplazar las filas\",\n                skipAllConflicts: \"Salta estas filas\",\n                letmeDecide: \"Déjame decidir por cada fila\",\n            },\n        },\n        dialogDecide: {\n            title: 'Importando id% {id} a \"% {resource}\"',\n            buttons: {\n                replaceRow: \"Reemplazar el id de fila =% {id}\",\n                addAsNewRow: \"Agregar como nueva fila (no reemplazar)\",\n                skipDontReplace: \"Omitir esta fila (no reemplazar)\",\n            },\n        },\n        loading: \"Cargando...\",\n    },\n};\n//# sourceMappingURL=es.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    csv: {\n        buttonMain: {\n            label: \"Import\",\n            tooltip: \"Must be a '.csv' or '.tsv' file\",\n            emptyResource: \"The 'resource' property was empty, did you pass in the {...props} to the ImportButton?\",\n        },\n        parsing: {\n            collidingIds: 'Found colliding \"id\" fields',\n            failedValidateRow: 'CSV failed the validation requirements',\n            invalidCsv: 'The documnent could not be parsed as a \"csv\" file',\n        },\n        dialogCommon: {\n            subtitle: 'Importing %{count} items from %{fileName} to \"%{resource}\"',\n            conflictCount: \"The resource <strong>%{resource}</strong> has <strong>%{conflictingCount}</strong> more records with conflicting ids\",\n            buttons: {\n                cancel: \"Cancel\",\n            }\n        },\n        dialogImport: {\n            alertClose: \"Imported %{fname}\",\n            title: 'Importing to \"%{resource}\"',\n            buttons: {\n                replaceAllConflicts: \"Replace the rows\",\n                skipAllConflicts: \"Skip these rows\",\n                letmeDecide: \"Let me decide for each row\",\n            },\n        },\n        dialogDecide: {\n            title: 'Importing id %{id} to \"%{resource}\"',\n            buttons: {\n                replaceRow: \"Replace the row id=%{id}\",\n                addAsNewRow: \"Add as new row (Don't replace)\",\n                skipDontReplace: \"Skip this row (Don't replace)\",\n            },\n        },\n        loading: \"Loading...\",\n    },\n};\n//# sourceMappingURL=en.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    csv: {\n        buttonMain: {\n            label: \"进口\",\n            tooltip: \"必须是“ .csv”或“ .tsv”文件\",\n            emptyResource: \"'resource'属性为空，您是否将{... props}传递给ImportButton？\",\n        },\n        parsing: {\n            collidingIds: '找到冲突的“ id”字段',\n            failedValidateRow: 'CSV未能通过验证要求',\n            invalidCsv: '该文档无法解析为“ csv”文件',\n        },\n        dialogCommon: {\n            subtitle: '将％{count}个项目从％{fileName}导入到“％{resource}”',\n            conflictCount: \"资源<strong>％{resource} </ strong>的ID冲突的记录还有<strong>％{conflictingCount} </ strong>个记录\",\n            buttons: {\n                cancel: \"取消\",\n            }\n        },\n        dialogImport: {\n            alertClose: \"导入的％{fname}\",\n            title: '导入到“％{resource}”',\n            buttons: {\n                replaceAllConflicts: \"替换行\",\n                skipAllConflicts: \"跳过这些行\",\n                letmeDecide: \"让我为每一行决定\",\n            },\n        },\n        dialogDecide: {\n            title: '将ID％{id}导入“％{resource}”',\n            buttons: {\n                replaceRow: \"替换行id =％{id}\",\n                addAsNewRow: \"添加为新行（请勿替换）\",\n                skipDontReplace: \"跳过此行（请勿替换）\",\n            },\n        },\n        loading: \"载入中...\",\n    },\n};\n//# sourceMappingURL=cn.js.map","export default {\n  // called when the user attempts to log in\n  login: ({ username }) => {\n    localStorage.setItem(\"username\", username);\n    // accept all username/password combinations\n    return Promise.resolve();\n  },\n  // called when the user clicks on the logout button\n  logout: () => {\n    localStorage.removeItem(\"username\");\n    return Promise.resolve();\n  },\n  // called when the API returns an error\n  checkError: ({ status }) => {\n    if (status === 401 || status === 403) {\n      localStorage.removeItem(\"username\");\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n  // called when the user navigates to a new location, to check for authentication\n  checkAuth: () => {\n    return localStorage.getItem(\"username\")\n      ? Promise.resolve()\n      : Promise.reject();\n  },\n  // called when the user navigates to a new location, to check for permissions / roles\n  getPermissions: () => Promise.resolve(),\n};\n","import * as React from \"react\";\n\nimport axios from \"axios\";\n\nimport { styled } from \"@material-ui/core/styles\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Button,\n  Box,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Divider,\n  Snackbar,\n} from \"@material-ui/core\";\n\nconst errorSnackbarErrorColor = \"#e57373\";\nconst callTable = (method, resource, endpoint, handleClick) => {\n  axios({\n    method,\n    url: `/${resource}/${endpoint}`,\n  })\n    .then((response) => {\n      handleClick(response.data.message, false);\n    })\n    .catch((error) => {\n      handleClick(JSON.stringify(error), true);\n    });\n};\n\nconst scoreColor = \"#00BFFF\";\nconst NormalButton = styled(Button)({\n  background: \"white\",\n  borderRadius: 4,\n  color: scoreColor,\n  \"&:hover\": {\n    backgroundColor: scoreColor,\n    color: \"white\",\n  },\n});\n\nconst dangerColor = \"#cb2431\";\nconst DangerButton = styled(Button)({\n  background: \"white\",\n  borderRadius: 4,\n  color: dangerColor,\n  \"&:hover\": {\n    backgroundColor: dangerColor,\n    color: \"white\",\n  },\n});\n\nconst ScoreOption = ({ resource, handleClick }) => (\n  <ListItem>\n    <ListItemText\n      primary={`Score ${resource}`}\n      secondary={`Re-calculate ${resource} scores.`}\n    />\n    <ListItemSecondaryAction>\n      <NormalButton\n        variant=\"outlined\"\n        onClick={() => {\n          callTable(\"get\", \"score\", resource, handleClick);\n        }}\n      >{`Score ${resource}`}</NormalButton>\n    </ListItemSecondaryAction>\n  </ListItem>\n);\n\nconst ClearOption = ({ resource, handleClick }) => (\n  <ListItem>\n    <ListItemText\n      primary={`Clear ${resource}`}\n      secondary={`Remove all ${resource}s.`}\n    />\n    <ListItemSecondaryAction>\n      <DangerButton\n        variant=\"outlined\"\n        onClick={() => {\n          callTable(\"delete\", resource, \"clear\", handleClick);\n        }}\n      >{`Clear ${resource}`}</DangerButton>\n    </ListItemSecondaryAction>\n  </ListItem>\n);\n\nconst ResetOption = ({ resource, handleClick }) => (\n  <ListItem>\n    <ListItemText\n      primary={`Reset ${resource}`}\n      secondary={`Remove ${resource} season info.`}\n    />\n    <ListItemSecondaryAction>\n      <DangerButton\n        variant=\"outlined\"\n        onClick={() => {\n          callTable(\"delete\", resource, \"reset\", handleClick);\n        }}\n      >{`Reset ${resource}`}</DangerButton>\n    </ListItemSecondaryAction>\n  </ListItem>\n);\n\nexport default () => {\n  const [open, setOpen] = React.useState(false);\n  const [isFail, setFail] = React.useState(false);\n  const [snackBarMessage, setSnackBarMessage] = React.useState(\"\");\n\n  const handleClick = (message, failValue) => {\n    setSnackBarMessage(message);\n    setFail(failValue);\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n    setFail(false);\n    setSnackBarMessage(\"\");\n  };\n\n  return (\n    <Card>\n      <CardHeader title=\"Welcome to the Admin Site\" />\n      <CardContent>\n        You can create, read, update, and delete table data from here!\n        <Box py={2}>\n          <Typography variant=\"h6\">Score Calculation</Typography>\n          <Divider />\n          <List>\n            <ScoreOption resource=\"user\" handleClick={handleClick} />\n            <ScoreOption resource=\"team\" handleClick={handleClick} />\n          </List>\n          <Typography variant=\"h6\">Danger Zone</Typography>\n          <Box border={1} color={dangerColor} borderRadius={4}>\n            <List>\n              <ResetOption resource=\"game\" handleClick={handleClick} />\n              <ResetOption resource=\"team\" handleClick={handleClick} />\n              <ResetOption resource=\"user\" handleClick={handleClick} />\n              <Divider />\n              <ClearOption resource=\"game\" handleClick={handleClick} />\n              <ClearOption resource=\"team\" handleClick={handleClick} />\n              <ClearOption resource=\"user\" handleClick={handleClick} />\n            </List>\n          </Box>\n        </Box>\n      </CardContent>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n        message={snackBarMessage}\n        ContentProps={\n          isFail && {\n            style: {\n              background: errorSnackbarErrorColor,\n            },\n          }\n        }\n      />\n    </Card>\n  );\n};\n","import React from \"react\";\n\nimport { TopToolbar } from \"react-admin\";\n\nimport { ImportButton } from \"react-admin-import-csv\";\nimport { CreateButton, ExportButton } from \"ra-ui-materialui\";\n\nexport const ListActions = (props) => {\n  const {\n    className,\n    basePath,\n    total,\n    resource,\n    currentSort,\n    filterValues,\n    exporter,\n  } = props;\n  return (\n    <TopToolbar className={className}>\n      <CreateButton basePath={basePath} />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={filterValues}\n        exporter={exporter}\n      />\n      <ImportButton {...props} />\n    </TopToolbar>\n  );\n};\n","import React from \"react\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  NumberField,\n  DateField,\n  EditButton,\n  Filter,\n  TextInput,\n} from \"react-admin\";\n\nimport { ListActions } from \"../import-csv/ListActions\";\n\nconst UserFilter = (props) => (\n  <Filter {...props}>\n    <TextInput label=\"Search First Name\" source=\"firstName\" alwaysOn />\n  </Filter>\n);\n\nconst UserList = (props) => (\n  <List {...props} filters={<UserFilter />} actions={<ListActions />}>\n    <Datagrid>\n      <NumberField source=\"rank\" />\n      <TextField source=\"username\" />\n      <NumberField source=\"score\" />\n      <TextField source=\"firstName\" />\n      <TextField source=\"lastName\" />\n      <NumberField label=\"Win\" source=\"numOfWin\" />\n      <NumberField label=\"Loss\" source=\"numOfLoss\" />\n      <NumberField label=\"Tie\" source=\"numOfTie\" />\n      <DateField source=\"updated_at\" />\n      <EditButton />\n    </Datagrid>\n  </List>\n);\n\nexport default UserList;\n","export default [\n  {\n    id: null,\n    name: \"EMPTY\",\n  },\n  {\n    id: \"ARI\",\n    name: \"Arizona Cardinals\",\n  },\n  {\n    id: \"ATL\",\n    name: \"Atlanta Falcons\",\n  },\n  {\n    id: \"BAL\",\n    name: \"Baltimore Ravens\",\n  },\n  {\n    id: \"BUF\",\n    name: \"Buffalo Bills\",\n  },\n  {\n    id: \"CAR\",\n    name: \"Carolina Panthers\",\n  },\n  {\n    id: \"CHI\",\n    name: \"Chicago Bears\",\n  },\n  {\n    id: \"CIN\",\n    name: \"Cincinnati Bengals\",\n  },\n  {\n    id: \"CLE\",\n    name: \"Cleveland Browns\",\n  },\n  {\n    id: \"DAL\",\n    name: \"Dallas Cowboys\",\n  },\n  {\n    id: \"DEN\",\n    name: \"Denver Broncos\",\n  },\n  {\n    id: \"DET\",\n    name: \"Detroit Lions\",\n  },\n  {\n    id: \"GB\",\n    name: \"Green Bay Packers\",\n  },\n  {\n    id: \"HOU\",\n    name: \"Houston Texans\",\n  },\n  {\n    id: \"IND\",\n    name: \"Indianapolis Colts\",\n  },\n  {\n    id: \"JAX\",\n    name: \"Jacksonville Jaguars\",\n  },\n  {\n    id: \"KC\",\n    name: \"Kansas City Chiefs\",\n  },\n  {\n    id: \"LAC\",\n    name: \"Los Angeles Chargers\",\n  },\n  {\n    id: \"LAR\",\n    name: \"Los Angeles Rams\",\n  },\n  {\n    id: \"LV\",\n    name: \"Las Vegas Raiders\",\n  },\n  {\n    id: \"MIA\",\n    name: \"Miami Dolphins\",\n  },\n  {\n    id: \"MIN\",\n    name: \"Minnesota Vikings\",\n  },\n  {\n    id: \"NE\",\n    name: \"New England Patriots\",\n  },\n  {\n    id: \"NO\",\n    name: \"New Orleans Saints\",\n  },\n  {\n    id: \"NYG\",\n    name: \"New York Giants\",\n  },\n  {\n    id: \"NYJ\",\n    name: \"New York Jets\",\n  },\n  {\n    id: \"PHI\",\n    name: \"Philadelphia Eagles\",\n  },\n  {\n    id: \"PIT\",\n    name: \"Pittsburgh Steelers\",\n  },\n  {\n    id: \"SEA\",\n    name: \"Seattle Seahawks\",\n  },\n  {\n    id: \"SF\",\n    name: \"San Francisco 49ers\",\n  },\n  {\n    id: \"TB\",\n    name: \"Tampa Bay Buccaneers\",\n  },\n  {\n    id: \"TEN\",\n    name: \"Tennessee Titans\",\n  },\n  {\n    id: \"WAS\",\n    name: \"Washington Football Team\",\n  },\n  {\n    id: \"BYE1\",\n    name: \"Bye 1\",\n  },\n  {\n    id: \"BYE2\",\n    name: \"Bye 2\",\n  },\n];\n","export default [\n  \"wk1\",\n  \"wk2\",\n  \"wk3\",\n  \"wk4\",\n  \"wk5\",\n  \"wk6\",\n  \"wk7\",\n  \"wk8\",\n  \"wk9\",\n  \"wk10\",\n  \"wk11\",\n  \"wk12\",\n  \"wk13\",\n  \"wk14\",\n  \"wk15\",\n  \"wk16\",\n  \"wk17\",\n];\n","import React from \"react\";\nimport { Edit, SimpleForm, TextInput, SelectInput } from \"react-admin\";\nimport teamChoices from \"../team-choices\";\nimport weeks from \"../weeks\";\n\nconst UserTitle = ({ record }) => {\n  return <span>Editing User {record ? `\"${record.username}\"` : \"\"}</span>;\n};\n\nconst UserEdit = (props) => (\n  <Edit title={<UserTitle />} {...props}>\n    <SimpleForm>\n      <TextInput source=\"username\" />\n      <TextInput source=\"id\" />\n      <TextInput source=\"firstName\" />\n      <TextInput source=\"lastName\" />\n      {weeks.map((weekId) => (\n        <div>\n          <SelectInput source={`${weekId}A`} choices={teamChoices} />\n          <SelectInput source={`${weekId}B`} choices={teamChoices} />\n        </div>\n      ))}\n    </SimpleForm>\n  </Edit>\n);\n\nexport default UserEdit;\n","import React from \"react\";\nimport { Create, SimpleForm, TextInput, SelectInput } from \"react-admin\";\nimport teamChoices from \"../team-choices\";\nimport weeks from \"../weeks\";\n\nconst UserCreate = (props) => (\n  <Create {...props}>\n    <SimpleForm redirect=\"list\">\n      <TextInput source=\"username\" />\n      <TextInput source=\"id\" />\n      <TextInput source=\"firstName\" />\n      <TextInput source=\"lastName\" />\n      {weeks.map((weekId) => (\n        <div>\n          <SelectInput source={`${weekId}A`} choices={teamChoices} />\n          <SelectInput source={`${weekId}B`} choices={teamChoices} />\n        </div>\n      ))}\n    </SimpleForm>\n  </Create>\n);\n\nexport default UserCreate;\n","import React from \"react\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  NumberField,\n  DateField,\n  EditButton,\n  Filter,\n  TextInput,\n} from \"react-admin\";\n\nimport { ListActions } from \"../import-csv/ListActions\";\n\nconst GameFilter = (props) => (\n  <Filter {...props}>\n    <TextInput label=\"Search Week\" source=\"week\" alwaysOn />\n  </Filter>\n);\n\nconst GameList = (props) => (\n  <List {...props} filters={<GameFilter />} actions={<ListActions />}>\n    <Datagrid>\n      <NumberField source=\"week\" />\n      <DateField source=\"startTime\" />\n      <TextField source=\"visTeam\" />\n      <TextField source=\"homeTeam\" />\n      <DateField source=\"updated_at\" />\n      <EditButton />\n    </Datagrid>\n  </List>\n);\n\nexport default GameList;\n","import React from \"react\";\nimport {\n  Edit,\n  SimpleForm,\n  TextInput,\n  NumberInput,\n  SelectInput,\n  DateInput,\n} from \"react-admin\";\nimport teamChoices from \"../team-choices\";\n\nconst GameEdit = (props) => (\n  <Edit {...props}>\n    <SimpleForm>\n      <TextInput source=\"id\" />\n      <DateInput source=\"startTime\" />\n      <NumberInput source=\"week\" />\n      <SelectInput source=\"visTeam\" choices={teamChoices} />\n      <SelectInput source=\"homeTeam\" choices={teamChoices} />\n    </SimpleForm>\n  </Edit>\n);\n\nexport default GameEdit;\n","import React from \"react\";\nimport {\n  Create,\n  SimpleForm,\n  TextInput,\n  NumberInput,\n  SelectInput,\n  DateInput,\n} from \"react-admin\";\nimport teamChoices from \"../team-choices\";\n\nconst GameCreate = (props) => (\n  <Create {...props}>\n    <SimpleForm redirect=\"list\">\n      <TextInput source=\"id\" />\n      <DateInput source=\"startTime\" />\n      <NumberInput source=\"week\" />\n      <SelectInput source=\"visTeam\" choices={teamChoices} />\n      <SelectInput source=\"homeTeam\" choices={teamChoices} />\n    </SimpleForm>\n  </Create>\n);\n\nexport default GameCreate;\n","import React from \"react\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  NumberField,\n  DateField,\n  EditButton,\n  Filter,\n  TextInput,\n} from \"react-admin\";\n\nimport { ListActions } from \"../import-csv/ListActions\";\n\nconst TeamFilter = (props) => (\n  <Filter {...props}>\n    <TextInput label=\"Search Team Abbreviation\" source=\"id\" alwaysOn />\n  </Filter>\n);\n\nconst TeamList = (props) => (\n  <List {...props} filters={<TeamFilter />} actions={<ListActions />}>\n    <Datagrid>\n      <TextField source=\"id\" />\n      <TextField source=\"fullName\" />\n      <NumberField source=\"numOfWin\" />\n      <NumberField source=\"numOfLoss\" />\n      <NumberField source=\"numOfTie\" />\n      <DateField source=\"updated_at\" />\n      <EditButton />\n    </Datagrid>\n  </List>\n);\n\nexport default TeamList;\n","import React from \"react\";\nimport { Edit, SimpleForm, TextInput, SelectInput } from \"react-admin\";\nimport weeks from \"../weeks\";\n\nconst TeamEdit = (props) => (\n  <Edit {...props}>\n    <SimpleForm>\n      <TextInput source=\"id\" />\n      <TextInput source=\"mascotName\" />\n      <TextInput source=\"fullName\" />\n      {weeks.map((weekId) => (\n        <SelectInput\n          source={weekId}\n          choices={[\n            { id: \"win\", name: \"Win\" },\n            { id: \"loss\", name: \"Loss\" },\n            { id: \"tie\", name: \"Tie\" },\n            { id: \"default\", name: \"Default\" },\n          ]}\n        />\n      ))}\n    </SimpleForm>\n  </Edit>\n);\n\nexport default TeamEdit;\n","import React from \"react\";\nimport { Create, SimpleForm, TextInput, SelectInput } from \"react-admin\";\nimport weeks from \"../weeks\";\n\nconst TeamCreate = (props) => (\n  <Create {...props}>\n    <SimpleForm redirect=\"list\">\n      <TextInput source=\"id\" />\n      <TextInput source=\"mascotName\" />\n      <TextInput source=\"fullName\" />\n      {weeks.map((weekId) => (\n        <SelectInput\n          source={weekId}\n          choices={[\n            { id: \"win\", name: \"Win\" },\n            { id: \"loss\", name: \"Loss\" },\n            { id: \"tie\", name: \"Tie\" },\n            { id: \"default\", name: \"Default\" },\n          ]}\n        />\n      ))}\n    </SimpleForm>\n  </Create>\n);\n\nexport default TeamCreate;\n","import React from \"react\";\n// import { Admin, Resource } from \"react-admin\";\nimport { Admin, Resource } from \"react-admin\";\n\nimport polyglotI18nProvider from \"ra-i18n-polyglot\";\nimport englishMessages from \"ra-language-english\";\n// copied from ra-import-csv to get english labels from import csv\nimport * as domainMessages from \"./import-csv/build-watch/i18n\";\n\nimport simpleRestProvider from \"ra-data-simple-rest\";\n\nimport authProvider from \"./authProvider\";\nimport Dashboard from \"./Dashboard/Dashboard\";\n\n// User\nimport UserIcon from \"@material-ui/icons/Group\";\nimport UserList from \"./User/UserList\";\nimport UserEdit from \"./User/UserEdit\";\nimport UserCreate from \"./User/UserCreate\";\n\n// Game\nimport GameIcon from \"@material-ui/icons/SportsFootball\";\nimport GameList from \"./Game/GameList\";\nimport GameEdit from \"./Game/GameEdit\";\nimport GameCreate from \"./Game/GameCreate\";\n\n// Team\nimport TeamIcon from \"@material-ui/icons/GroupWork\";\nimport TeamList from \"./Team/TeamList\";\nimport TeamEdit from \"./Team/TeamEdit\";\nimport TeamCreate from \"./Team/TeamCreate\";\n\nconst dataProvider = simpleRestProvider(\"http://localhost:3001\");\n\nconst App = () => {\n  // Setup i18n\n  const i18nProvider = polyglotI18nProvider(\n    (local) => ({ ...englishMessages, ...domainMessages.en }),\n    \"en\"\n  );\n\n  return (\n    <Admin\n      dashboard={Dashboard}\n      authProvider={authProvider}\n      dataProvider={dataProvider}\n      i18nProvider={i18nProvider}\n    >\n      <Resource\n        name=\"user\"\n        icon={UserIcon}\n        list={UserList}\n        edit={UserEdit}\n        create={UserCreate}\n      />\n      <Resource\n        name=\"game\"\n        icon={GameIcon}\n        list={GameList}\n        edit={GameEdit}\n        create={GameCreate}\n      />\n      <Resource\n        name=\"team\"\n        icon={TeamIcon}\n        list={TeamList}\n        edit={TeamEdit}\n        create={TeamCreate}\n      />\n    </Admin>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}